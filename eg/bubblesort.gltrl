:= my_list […]—
   5
   6
   2
   9
   7
   3
   1
   0
   8
   4

:=λ misplaced? |first ^int second ^int| → ^bool
   (greater? first second)

:=λ bubblesort! |this_list ^[int]| → Void
   for |pass_through_list (range 0 10)|—
      for |i (range 0 9)|—
         if (misplaced? (_ this_list i) (_ this_list (+ i 1)))—
            do—
               := i_plus_one (+ i 1)
               := temp (_ this_list i)
               _:= this_list i (_ this_list (+ i 1))
               _:= this_list i_plus_one temp
               (println_container this_list)
   Void

(bubblesort! my_list)
(println_container my_list)

# Expected output—
# [5, 2, 6, 9, 7, 3, 1, 0, 8, 4]
# [5, 2, 6, 7, 9, 3, 1, 0, 8, 4]
# [5, 2, 6, 7, 3, 9, 1, 0, 8, 4]
# [5, 2, 6, 7, 3, 1, 9, 0, 8, 4]
# [5, 2, 6, 7, 3, 1, 0, 9, 8, 4]
# [5, 2, 6, 7, 3, 1, 0, 8, 9, 4]
# [5, 2, 6, 7, 3, 1, 0, 8, 4, 9]
# [2, 5, 6, 7, 3, 1, 0, 8, 4, 9]
# [2, 5, 6, 3, 7, 1, 0, 8, 4, 9]
# [2, 5, 6, 3, 1, 7, 0, 8, 4, 9]
# [2, 5, 6, 3, 1, 0, 7, 8, 4, 9]
# [2, 5, 6, 3, 1, 0, 7, 4, 8, 9]
# [2, 5, 3, 6, 1, 0, 7, 4, 8, 9]
# [2, 5, 3, 1, 6, 0, 7, 4, 8, 9]
# [2, 5, 3, 1, 0, 6, 7, 4, 8, 9]
# [2, 5, 3, 1, 0, 6, 4, 7, 8, 9]
# [2, 3, 5, 1, 0, 6, 4, 7, 8, 9]
# [2, 3, 1, 5, 0, 6, 4, 7, 8, 9]
# [2, 3, 1, 0, 5, 6, 4, 7, 8, 9]
# [2, 3, 1, 0, 5, 4, 6, 7, 8, 9]
# [2, 1, 3, 0, 5, 4, 6, 7, 8, 9]
# [2, 1, 0, 3, 5, 4, 6, 7, 8, 9]
# [2, 1, 0, 3, 4, 5, 6, 7, 8, 9]
# [1, 2, 0, 3, 4, 5, 6, 7, 8, 9]
# [1, 0, 2, 3, 4, 5, 6, 7, 8, 9]
# [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
# [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
